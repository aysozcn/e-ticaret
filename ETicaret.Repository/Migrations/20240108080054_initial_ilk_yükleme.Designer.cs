// <auto-generated />
using System;
using ETicaret.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETicaret.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240108080054_initial_ilk_yükleme")]
    partial class initialilkyükleme
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Adresler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AdresBasligi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("IlKodu")
                        .HasColumnType("int");

                    b.Property<int>("IlceKod")
                        .HasColumnType("int");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("PostaKodu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IlceKod");

                    b.HasIndex("MusteriId");

                    b.ToTable("Adresler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.ErisimAlanlari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("ControllerAdi")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("ViewAdi")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("ErisimAlanlari");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Fotograflar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotografAciklamasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("FotografSirasi")
                        .HasColumnType("tinyint");

                    b.Property<string>("FotografYolu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UrunId");

                    b.ToTable("Fotograflar");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Ilceler", b =>
                {
                    b.Property<int>("IlceKodu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlceKodu"));

                    b.Property<int>("IlKodu")
                        .HasColumnType("int");

                    b.Property<string>("IlceAdi")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("IlceKodu");

                    b.HasIndex("IlKodu");

                    b.ToTable("Ilceler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Iller", b =>
                {
                    b.Property<int>("IlKodu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlKodu"));

                    b.Property<string>("IlAdi")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("IlKodu");

                    b.ToTable("Iller");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Kategoriler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Kullanicilar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("KullaniciEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("KullaniciResim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PersonelMi")
                        .HasColumnType("bit");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("YetkiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YetkiId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Menular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("ErisimAlanlariId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("MenuAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MenuSirasi")
                        .HasColumnType("int");

                    b.Property<int?>("UstMenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ErisimAlanlariId")
                        .IsUnique();

                    b.HasIndex("UstMenuId");

                    b.ToTable("Menular");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Musteriler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Meslek")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("50");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefonu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId")
                        .IsUnique()
                        .HasFilter("[KullaniciId] IS NOT NULL");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Personeller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("CalistigiFirma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cinsiyet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("KullanicilarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MaasOdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MedeniHali")
                        .HasColumnType("bit");

                    b.Property<string>("PersonelAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PersonelHakkinda")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PersonelKullaniciBilgileriId")
                        .HasColumnType("int");

                    b.Property<decimal>("PersonelMaasi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PersonelSoyadi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("YasadigiSehir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KullanicilarId");

                    b.HasIndex("PersonelKullaniciBilgileriId")
                        .IsUnique();

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.SiparisDetay", b =>
                {
                    b.Property<int>("SiparisDetayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisDetayId"));

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SiparisId")
                        .HasColumnType("int");

                    b.Property<int>("UrunAdet")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("SiparisDetayId");

                    b.HasIndex("SiparisId");

                    b.HasIndex("UrunId");

                    b.ToTable("SiparisDetay");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Siparisler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<decimal>("ToplamFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ToplamUrunAdet")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("MusteriId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Urunler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("UrunFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UrunStok")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.YetkiErisim", b =>
                {
                    b.Property<int>("ErisimAlaniId")
                        .HasColumnType("int");

                    b.Property<int>("YetkiId")
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ErisimAlaniId", "YetkiId");

                    b.HasIndex("YetkiId");

                    b.ToTable("YetkiErisim");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Yetkiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("YetkiAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Yetkiler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Yorumlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<string>("Yorum")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("YorumUstId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("UrunId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Adresler", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Ilceler", "Ilce")
                        .WithMany("Adresler")
                        .HasForeignKey("IlceKod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETicaret.Core.ETicaretDatabase.Musteriler", "Musteriler")
                        .WithMany("Adresler")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ilce");

                    b.Navigation("Musteriler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Fotograflar", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Urunler", "Urunler")
                        .WithMany("Fotograflar")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Ilceler", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Iller", "Iller")
                        .WithMany("Ilceler")
                        .HasForeignKey("IlKodu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Iller");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Kullanicilar", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Yetkiler", "Yetkiler")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("YetkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yetkiler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Menular", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.ErisimAlanlari", "ErisimAlanlari")
                        .WithOne("Menular")
                        .HasForeignKey("ETicaret.Core.ETicaretDatabase.Menular", "ErisimAlanlariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETicaret.Core.ETicaretDatabase.Menular", "UstMenu")
                        .WithMany("AltMenu")
                        .HasForeignKey("UstMenuId");

                    b.Navigation("ErisimAlanlari");

                    b.Navigation("UstMenu");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Musteriler", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Kullanicilar", "Kullanicilar")
                        .WithOne("Musteriler")
                        .HasForeignKey("ETicaret.Core.ETicaretDatabase.Musteriler", "KullaniciId");

                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Personeller", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Kullanicilar", "Kullanicilar")
                        .WithMany()
                        .HasForeignKey("KullanicilarId");

                    b.HasOne("ETicaret.Core.ETicaretDatabase.Kullanicilar", "PersonelKullaniciBilgileri")
                        .WithOne("Personeller")
                        .HasForeignKey("ETicaret.Core.ETicaretDatabase.Personeller", "PersonelKullaniciBilgileriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanicilar");

                    b.Navigation("PersonelKullaniciBilgileri");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.SiparisDetay", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Siparisler", "Siparisler")
                        .WithMany("SiparisDetay")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETicaret.Core.ETicaretDatabase.Urunler", "Urunler")
                        .WithMany("SiparisDetay")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparisler");

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Siparisler", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Kullanicilar", "Kullanicilar")
                        .WithMany("Siparisler")
                        .HasForeignKey("KullaniciId");

                    b.HasOne("ETicaret.Core.ETicaretDatabase.Musteriler", "Musteriler")
                        .WithMany("Siparisler")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanicilar");

                    b.Navigation("Musteriler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Urunler", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Kategoriler", "Kategoriler")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoriler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.YetkiErisim", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.ErisimAlanlari", "ErisimAlanlari")
                        .WithMany("YetkiErisimleri")
                        .HasForeignKey("ErisimAlaniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETicaret.Core.ETicaretDatabase.Yetkiler", "Yetkiler")
                        .WithMany("YetkiErisimleri")
                        .HasForeignKey("YetkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ErisimAlanlari");

                    b.Navigation("Yetkiler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Yorumlar", b =>
                {
                    b.HasOne("ETicaret.Core.ETicaretDatabase.Kullanicilar", "Kullanicilar")
                        .WithMany("Yorumlar")
                        .HasForeignKey("KullaniciId");

                    b.HasOne("ETicaret.Core.ETicaretDatabase.Urunler", "Urunler")
                        .WithMany("Yorumlar")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanicilar");

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.ErisimAlanlari", b =>
                {
                    b.Navigation("Menular");

                    b.Navigation("YetkiErisimleri");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Ilceler", b =>
                {
                    b.Navigation("Adresler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Iller", b =>
                {
                    b.Navigation("Ilceler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Kategoriler", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Kullanicilar", b =>
                {
                    b.Navigation("Musteriler");

                    b.Navigation("Personeller");

                    b.Navigation("Siparisler");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Menular", b =>
                {
                    b.Navigation("AltMenu");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Musteriler", b =>
                {
                    b.Navigation("Adresler");

                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Siparisler", b =>
                {
                    b.Navigation("SiparisDetay");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Urunler", b =>
                {
                    b.Navigation("Fotograflar");

                    b.Navigation("SiparisDetay");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("ETicaret.Core.ETicaretDatabase.Yetkiler", b =>
                {
                    b.Navigation("Kullanicilar");

                    b.Navigation("YetkiErisimleri");
                });
#pragma warning restore 612, 618
        }
    }
}
